package ie.atu.sw;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.HashMap;

/**
 * Extends TextFileParserator. Takes a list of most common words in English and
 * returns a HashMap with words as keys and an array of doubles as values.
 * 
 * @author Mark Davidson
 * @version 1.0
 * @see TextFileParser
 * @see EmbeddingsFileParser
 */
public class Google1000Parser extends TextFileParser {

	private HashMap<String, double[]> googleMap = new HashMap<String, double[]>();

	@Override
	public Object parse(String textFile) {

		return null;
	}

	// Big-O of parse: O(n^2) as it iterates through a file line by line, a nested
	// loop looping over each line
	/**
	 * Parse method takes in the Google1000 file and the embedding map and returns a
	 * map containing the word:embeddings of the words from the selected file.
	 * 
	 * @param googleFile The text file containing the reference list of most common
	 *                   words in English.
	 * @param embedMap   A map of words:embeddings generated by
	 *                   <code>EmbeddingsFileParser</code>.
	 * @return A HashMap representation of the most common words and their
	 *         embeddings.
	 */
	public HashMap<String, double[]> parse(String googleFile, HashMap<String, double[]> embedMap) {
		LineCounter lc = new LineCounter();
		int lineCount = 0;

		try {
			BufferedReader br = new BufferedReader((new InputStreamReader(new FileInputStream(googleFile))));
			double[] embeddings = null;
			String word = "";
			String line;
			String[] lineArray;
			lineCount = lc.fileLineCounter(googleFile);

			for (int i = 0; i < lineCount; i++) { // O(n^2)
				line = br.readLine();

				lineArray = line.split("\\W", 0);

				for (String str : lineArray) {
					word = str;
					embeddings = embedMap.get(word); // Key based operation O(1)
					googleMap.put(word, embeddings);
				}

			}

			br.close();

		} catch (Exception e) {
			System.out.println("The Specified Google1000 file was not found.");
			e.printStackTrace();
		}
		return googleMap;

	}

}
